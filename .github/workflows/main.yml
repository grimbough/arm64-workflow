name: test build deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  check-arm64:
    name: Test package on ARM64
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
    
      - name: checkout
        uses: actions/checkout@v3
        
      - name: Clone package to be tested
        run: git clone https://git.bioconductor.org/packages/BiocStyle
        
      - name: Make R library
        run: mkdir -p ${RUNNER_TEMP}/R-lib
        
      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ${RUNNER_TEMP}/R-lib
          key: ${RUNNER_TEMP}/R-lib

      - name: Install Dependencies
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: none
          distro: none
          base_image: --platform=linux/arm64 bioconductor/bioconductor_docker:RELEASE_3_16
          githubToken: ${{ secrets.GHCR_TOKEN }}
          
          install: |
            echo "options(Ncpus=2L, timeout = 300)" >> ~/.Rprofile

          dockerRunArgs: |
            --volume "${PWD}/BiocStyle:/BiocStyle"
            --volume "${RUNNER_TEMP}/R-lib:/tmp/R-lib"
            
          env: |
            R_LIBS_USER: /tmp/R-lib
            PKG: /BiocStyle
            
          run: |
            uname -m
            env
            Rscript -e "library(remotes)" -e "dev_package_deps(Sys.getenv('PKG'), dependencies = TRUE) |> update(upgrade = 'always')"
            
      - name: Install Package
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: none
          distro: none
          base_image: --platform=linux/arm64 bioconductor/bioconductor_docker:RELEASE_3_16
          githubToken: ${{ secrets.GHCR_TOKEN }}
          
          dockerRunArgs: |
            --volume "${PWD}/BiocStyle:/BiocStyle"
            --volume "${RUNNER_TEMP}/R-lib:/tmp/R-lib"
          env: |
            R_LIBS_USER: /tmp/R-lib
            PKG: /BiocStyle
          
          run: |  
            Rscript -e "options('Ncpus')"
            R CMD INSTALL ${PKG} &> ${PKG}.install-out.txt
            cat ${PKG}.install-out.txt
            
      - name: Build Package
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: none
          distro: none
          base_image: --platform=linux/arm64 bioconductor/bioconductor_docker:RELEASE_3_16
          githubToken: ${{ secrets.GHCR_TOKEN }}
          
          install: |
            Rscript -e "install.packages('tinytex')" \
              -e "tinytex::install_tinytex()" \
              -e "tinytex::tlmgr_install(c('authblk', 'beramono', 'caption', 'changepage', 'color', 'enumitem')) \
              -e "tinytex::tlmgr_install(c('etoolbox', 'fancyhdr', 'fontenc', 'footmisc', 'framed', 'geometry', 'graphicx')) \
              -e "tinytex::tlmgr_install(c('hyperref', 'ifthen', 'marginfix', 'mathtools', 'nowidow', 'parnotes', 'parskip', 'placeins', 'ragged2e', 'soul', 'titlesec', 'titletoc', 'xstring'))"

          dockerRunArgs: |
            --volume "${PWD}/BiocStyle:/BiocStyle"
            --volume "${RUNNER_TEMP}/R-lib:/tmp/R-lib"
          env: |
            R_LIBS_USER: /tmp/R-lib
            PKG: /BiocStyle
          
          run: |
            echo ${PATH}
            PATH=~/bin/:${PATH}
            ls -l ~/bin
            R CMD build --keep-empty-dirs --no-resave-data ${PKG}
            
      - name: Check Package
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: none
          distro: none
          base_image: --platform=linux/arm64 bioconductor/bioconductor_docker:RELEASE_3_16
          githubToken: ${{ secrets.GHCR_TOKEN }}
          
          dockerRunArgs: |
            --volume "${PWD}/BiocStyle:/BiocStyle"
            --volume "${RUNNER_TEMP}/R-lib:/tmp/R-lib"
          env: |
            R_LIBS_USER: /tmp/R-lib
            PKG: /BiocStyle
          
          run: |  
            R CMD check --install=check:${PKG}.install-out.txt --library="${R_LIBS_USER}" --no-vignettes --timings ${PKG}*.tar.gz

